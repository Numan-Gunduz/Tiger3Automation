package pages;

import io.appium.java_client.windows.WindowsDriver;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import utils.ElementHelper;

import java.awt.*;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.util.List;

public class EkstreAktarimiPage {

    private final WindowsDriver<WebElement> driver;

    private final WebDriverWait wait;
    public EkstreAktarimiPage(WindowsDriver<WebElement> driver) {
        this.driver = driver;
        this.wait = new WebDriverWait(driver, 15);
    }

    public void clickSidebarMenu(String menuName) {
        WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.name(menuName)));
        System.out.println("Men√º alanƒ±nƒ±n y√ºklenmesi bekleniyor 4 sn");
        try {
            Thread.sleep (8000); // tablo y√ºklemesi i√ßin bekle
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
        element.click();
    }
    public void selectBank(String bankaAdi) {
        WebElement bankaDropdown = wait.until(ExpectedConditions.elementToBeClickable(By.className("ant-select-selector")));
        bankaDropdown.click();

        try {
            Thread.sleep(1000);
            WebElement element = driver.findElement(By.xpath("//*[contains(@title, '" + bankaAdi + "')]"));
            ElementHelper.clickByRobot(element);
            System.out.println("‚úÖ '" + bankaAdi + "' ba≈üarƒ±yla se√ßildi (Robot ile XPath).");
        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è XPath ile de bulunamadƒ±. Koordinat ile deneniyor...");
            ElementHelper.clickByCoordinates(267, 400); // Inspect √ßƒ±ktƒ±sƒ±ndan alƒ±nan ger√ßek nokta
        }
    }





    public void selectAccount(String hesapNo) {
        try {
            WebElement hesapDropdown = driver.findElements(By.className("ant-select-selector")).get(1);
            wait.until(ExpectedConditions.elementToBeClickable(hesapDropdown)).click();
            Thread.sleep(1000);

            // 1Ô∏è‚É£ ID √ºzerinden eri≈ümeyi dene (ama bu element ger√ßek IBAN deƒüil, list item deƒüilse i≈ü yapmaz)
            try {
                WebElement elementById = driver.findElement(By.id("rc_select_4_list_2")); // inspect'e g√∂re id
                if (elementById.isDisplayed() && elementById.getText().contains(hesapNo)) {
                    ElementHelper.clickByRobot(elementById);
                    System.out.println("‚úÖ ID ile se√ßim yapƒ±ldƒ±.");
                    return;
                }
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è ID ile eri≈üim ba≈üarƒ±sƒ±z: " + e.getMessage());
            }

            try {
                WebElement xpathByTitle = driver.findElement(By.xpath("//div[@title='" + hesapNo + "']"));
                if (xpathByTitle.isDisplayed()) {
                    ElementHelper.clickByRobot(xpathByTitle);
                    System.out.println("‚úÖ XPath title ile se√ßim ba≈üarƒ±lƒ±.");
                    return;
                }
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è XPath (title) ile eri≈üilemedi: " + e.getMessage());
            }

            // 3Ô∏è‚É£ XPath text i√ßerikli normal div i√ßeriƒüi ile (text() fonksiyonu)
            try {
                WebElement xpathByText = driver.findElement(By.xpath("//div[contains(text(),'" + hesapNo + "')]"));
                if (xpathByText.isDisplayed()) {
                    ElementHelper.clickByRobot(xpathByText);
                    System.out.println("‚úÖ XPath text ile se√ßim ba≈üarƒ±lƒ±.");
                    return;
                }
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è XPath text ile eri≈üilemedi: " + e.getMessage());
            }

            // 4Ô∏è‚É£ className + title kombinasyonu (daha spesifik)
            try {
                WebElement byClassAndTitle = driver.findElement(By.xpath("//div[contains(@class, 'ant-select-item-option') and @title='" + hesapNo + "']"));
                if (byClassAndTitle.isDisplayed()) {
                    ElementHelper.clickByRobot(byClassAndTitle);
                    System.out.println("‚úÖ XPath class + title ile se√ßim ba≈üarƒ±lƒ±.");
                    return;
                }
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è XPath class + title eri≈üilemedi: " + e.getMessage());
            }

        } catch (Exception e) {
            System.out.println("‚ùå Dropdown i≈üleminde hata: " + e.getMessage());
        }

        // 5Ô∏è‚É£ Hi√ßbiri olmadƒ±ysa son √ßare: koordinat
        ElementHelper.clickByCoordinates(550, 340);
        System.out.println("‚úÖ Koordinat ile IBAN se√ßimi yapƒ±ldƒ±.");
    }


//    public void selectAccountByHelpText(String iban) {
//        try {
//            // 1. Dropdown'u a√ß
//            WebElement hesapDropdown = driver.findElements(By.className("ant-select-selector")).get(1);
//            wait.until(ExpectedConditions.elementToBeClickable(hesapDropdown)).click();
//            System.out.println("‚úÖ Hesap dropdown tƒ±klandƒ±.");
//            Thread.sleep(1000);
//
//            // 2. IBAN √∂ƒüesini HelpText ya da Name ile bul
//            WebElement ibanElement = wait.until(ExpectedConditions.presenceOfElementLocated(
//                    By.xpath("//*[(contains(@HelpText, '" + iban + "')) or (@Name='" + iban + "')]")
//            ));
//
//            // 3. IBAN √∂ƒüesi g√∂r√ºn√ºrse odaklan ve ENTER sim√ºle et
//            if (ibanElement.isDisplayed()) {
//                // √ñƒüeye tƒ±kla (odaklama i√ßin)
//                ibanElement.click();
//                Thread.sleep(500);
//
//                // Robot ile ENTER g√∂nder
//                Robot robot = new Robot();
//                robot.keyPress(KeyEvent.VK_ENTER);
//                robot.keyRelease(KeyEvent.VK_ENTER);
//
//                System.out.println("‚úÖ IBAN se√ßildi: " + iban);
//            } else {
//                System.out.println("‚ö†Ô∏è IBAN g√∂r√ºn√ºr deƒüil.");
//            }
//
//        } catch (Exception e) {
//            System.out.println("‚ùå IBAN se√ßimi hatasƒ±: " + e.getMessage());
//        }
//    }


//    public void selectAccount(String hesapNo) {
//        try {
//            WebElement hesapDropdown = driver.findElements(By.className("ant-select-selector")).get(1);
//            wait.until(ExpectedConditions.elementToBeClickable(hesapDropdown)).click();
//            Thread.sleep(1000);
//            List<WebElement> options = driver.findElements(By.className("ant-select-item-option-content"));
//            for (WebElement opt : options) {
//                System.out.println("Dropdown se√ßeneƒüi: " + opt.getText());
//            }
//
//            WebElement element = null;
//
//            // 1 - title attribute ile
//            try {
//                element = driver.findElement(By.xpath("//div[@title='" + hesapNo + "']"));
//                System.out.println("‚úÖ XPath title ile bulundu.");
//            } catch (Exception e) {
//                System.out.println("‚ö†Ô∏è XPath title ile bulunamadƒ±.");
//            }
//
//            // 2 - i√ßerik (text) ile option-content div
//            if (element == null) {
//                try {
//                    element = driver.findElement(By.xpath("//div[contains(@class,'ant-select-item-option-content') and normalize-space(text())='" + hesapNo + "']"));
//                    System.out.println("‚úÖ XPath i√ßerik ile bulundu.");
//                } catch (Exception e) {
//                    System.out.println("‚ö†Ô∏è XPath i√ßerik ile bulunamadƒ±.");
//                }
//            }
//
//            // 3 - option container div ve title attribute ile
//            if (element == null) {
//                try {
//                    element = driver.findElement(By.xpath("//div[contains(@class,'ant-select-item-option') and @title='" + hesapNo + "']"));
//                    System.out.println("‚úÖ XPath class + title ile bulundu.");
//                } catch (Exception e) {
//                    System.out.println("‚ö†Ô∏è XPath class + title ile bulunamadƒ±.");
//                }
//            }
//
//            // 4 - Eri≈üilebiliyorsa tƒ±kla
//            if (element != null && element.isDisplayed()) {
//                ElementHelper.clickByRobot(element);
//                System.out.println("‚úÖ Robot ile IBAN se√ßimi ba≈üarƒ±lƒ±.");
//                return;
//            }
//
//        } catch (Exception e) {
//            System.out.println("‚ùå Dropdown i≈üleminde genel hata: " + e.getMessage());
//        }
//
//        // 5 - Koordinat fallback
//        ElementHelper.clickByCoordinates(550, 340);
//        System.out.println("‚úÖ Koordinat ile IBAN se√ßimi yapƒ±ldƒ±.");
//    }


    public void clickListeleVeBekle(int maxWaitSeconds) {
        clickButtonByText("Listele"); // XPath veya koordinatla tƒ±klar

        try {
            Thread.sleep(8000); // Statik bekleme
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }

        // Tablo kolonunun geldiƒüini doƒürula
        try {
            By kolonKontrol = By.name("Fi≈ü T√ºr√º");
            new WebDriverWait(driver, maxWaitSeconds)
                    .until(ExpectedConditions.presenceOfElementLocated(kolonKontrol));
            System.out.println("‚úÖ Fi≈ü T√ºr√º kolonu bulundu, listeleme ba≈üarƒ±lƒ±.");
        } catch (Exception e) {
            System.out.println("‚ùå Listele sonrasƒ± tablo y√ºklenmedi: " + e.getMessage());
        }
    }
    public void clickButtonByText(String visibleText) {
        try {
            System.out.println("üîç '" + visibleText + "' butonu XPath @Name ile aranƒ±yor...");
            WebElement btn = driver.findElement(By.xpath("//*[contains(@Name, '" + visibleText + "')]"));
            if (btn.isDisplayed() && btn.isEnabled()) {
                btn.click();
                System.out.println("‚úÖ '" + visibleText + "' butonuna tƒ±klandƒ± (XPath @Name ile).");
                return;
            } else {
                System.out.println("‚ö†Ô∏è Buton bulundu ama aktif deƒüil.");
            }
        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è XPath @Name ile tƒ±klama ba≈üarƒ±sƒ±z: " + e.getMessage());
        }

        System.out.println("üñ±Ô∏è Koordinat ile tƒ±klama deneniyor...");
        ElementHelper.clickByCoordinates(1157, 291);
        System.out.println("‚úÖ Koordinat ile tƒ±klama tamamlandƒ±.");
    }


//    public void clickButtonByText(String visibleText) {
//        try {
//            WebElement btn = new WebDriverWait(driver, 10).until(
//                    ExpectedConditions.elementToBeClickable(
//                            By.xpath("//button[.//span[normalize-space(text())='" + visibleText + "']]")
//                    )
//            );
//            btn.click();
//            System.out.println("‚úÖ '" + visibleText + "' butonuna tƒ±klandƒ± (XPath ile).");
//        } catch (Exception e) {
//            System.out.println("‚ö†Ô∏è XPath ile tƒ±klama ba≈üarƒ±sƒ±z, koordinat denenecek...");
//            ElementHelper.clickByCoordinates(1157, 291);
//            System.out.println("üñ±Ô∏è Koordinat ile tƒ±klama tamamlandƒ±.");
//        }
//    }

    // 1Ô∏è‚É£ Scroll'u saƒüa kaydƒ±rmak i√ßin kullanƒ±lƒ±r
    public static void scrollRightWithRobot() {
        try {
            Robot robot = new Robot();
            robot.mouseMove(1700, 1020);  // Scroll bar √ºzerine odaklan
            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);
            robot.mouseMove(1850, 1020);  // Scroll saƒüa √ßek
            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);
            System.out.println("‚úÖ Scroll bar saƒüa kaydƒ±rƒ±ldƒ±.");
            Thread.sleep(1000); // tablo y√ºklemesi i√ßin bekle
        } catch (Exception e) {
            System.out.println("‚ùå Scroll bar kaydƒ±rƒ±lamadƒ±: " + e.getMessage());
        }
    }

    // 2Ô∏è‚É£ Durumu "Eksik Bilgi Bulunuyor" olan satƒ±rƒ± bul ve checkbox'ƒ± i≈üaretle
    public void selectRowWithDurum(String durumText) {
        scrollRightWithRobot(); // Scroll yapmadan √∂nce kolon g√∂r√ºnmez olabilir

        try {
            List<WebElement> rows = driver.findElements(By.xpath("//tbody/tr"));
            for (WebElement row : rows) {
                try {
                    // Satƒ±rdaki "Durum" h√ºcresini bul
                    WebElement durumCell = row.findElement(By.xpath(".//td[normalize-space()='Eksik Bilgi Bulunuyor']"));


                    if (durumCell != null && durumCell.getText().trim().equalsIgnoreCase(durumText)) {
                        // Aynƒ± satƒ±rda checkbox'ƒ± bul ve tƒ±kla
                        WebElement checkbox = row.findElement(By.xpath(".//input[@type='checkbox']"));
                        if (!checkbox.isSelected()) {
                            checkbox.click();
                            System.out.println("‚úÖ '" + durumText + "' durumundaki satƒ±r i≈üaretlendi.");
                        } else {
                            System.out.println("‚ÑπÔ∏è Checkbox zaten se√ßiliydi.");
                        }
                        return;
                    }

                } catch (Exception inner) {
                    // Satƒ±rda "durum" h√ºcresi yoksa hata verme, sƒ±radakine ge√ß
                }
            }

            System.out.println("‚ùå '" + durumText + "' durumuna sahip satƒ±r bulunamadƒ±.");

        } catch (Exception e) {
            System.out.println("‚ùå Satƒ±r/checkbox se√ßiminde genel hata: " + e.getMessage());
        }
    }

    public void selectFirstCheckbox() {
        try {
            // 1Ô∏è‚É£ Checkbox'ƒ± saran label'ƒ± bul
            WebElement label = driver.findElement(By.xpath("(//label[contains(@class,'ant-checkbox-wrapper')])[1]"));

            // 2Ô∏è‚É£ ƒ∞√ßindeki input'u bulup kontrol et
            WebElement input = label.findElement(By.xpath(".//input[@type='checkbox']"));

            if (!input.isSelected()) {
                label.click();  // Tƒ±klanabilir olan √∂ƒüe label‚Äôdƒ±r
                System.out.println("‚úÖ ƒ∞lk satƒ±rdaki checkbox i≈üaretlendi.");
            } else {
                System.out.println("‚ÑπÔ∏è ƒ∞lk checkbox zaten se√ßili.");
            }
        } catch (Exception e) {
            System.out.println("‚ùå ƒ∞lk checkbox se√ßilemedi: " + e.getMessage());
        }
    }

    public static void clickScrollRightArrowWithRobot() {
        try {
            Robot robot = new Robot();
            robot.mouseMove(1844, 1011); // Scroll bar saƒü ok koordinatƒ±
            Thread.sleep(300);
            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);
            Thread.sleep(400); // kƒ±sa basƒ±lƒ± tut
            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);
            System.out.println("‚úÖ Scroll saƒü oku tƒ±klandƒ±.");
        } catch (Exception e) {
            System.out.println("‚ùå Scroll oku tƒ±klanamadƒ±: " + e.getMessage());
        }
    }
    public void testEkstreCheckboxSecimi() {
        selectFirstCheckbox(); // ƒ∞lk checkbox'ƒ± se√ß
        clickScrollRightArrowWithRobot(); // Scroll saƒüa
        selectRowWithDurum("Eksik Bilgi Bulunuyor"); // Eksik satƒ±rƒ± se√ß
    }


    public void changeFisTypeTo(String menu, String fisTuru) {
        Actions actions = new Actions(driver);
        WebElement selectedRow = driver.findElement(By.xpath("//*[contains(@Name, 'Se√ßildi')]")); // √∂rnek: se√ßilen satƒ±r

        actions.contextClick(selectedRow).perform();

        WebElement menuElement = wait.until(ExpectedConditions.elementToBeClickable(By.name(menu)));
        menuElement.click();

        WebElement fisOption = wait.until(ExpectedConditions.elementToBeClickable(By.name(fisTuru)));
        fisOption.click();
    }

    public boolean isFisTuruUpdated(String expectedText) {
        try {
            WebElement updatedCell = driver.findElement(By.xpath("//*[contains(@Name, '" + expectedText + "')]"));
            return updatedCell != null && updatedCell.isDisplayed();
        } catch (Exception e) {
            return false;
        }
    }

    public boolean isDurumColumnShows(String durumText) {
        try {
            WebElement durum = driver.findElement(By.xpath("//*[contains(@Name, '" + durumText + "')]"));
            return durum != null && durum.isDisplayed();
        } catch (Exception e) {
            return false;
        }
    }

    public void clickErpCariKodDots() {
        List<WebElement> ucNoktaButonlari = driver.findElements(By.name("..."));
        for (WebElement ucNokta : ucNoktaButonlari) {
            // Muhtemelen bo≈ü olan alanlarƒ±n yanƒ±nda olur
            if (ucNokta.isDisplayed()) {
                ucNokta.click();
                break;
            }
        }
    }

    public void selectFirstCariFromPopup() {
        WebElement firstCari = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//DataItem[1]")));
        Actions actions = new Actions(driver);
        actions.doubleClick(firstCari).perform();
    }
}
